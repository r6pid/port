// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL") // uses connection pooling
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Link {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title String
    url   String
    image String?

    bioId String
    bio   Bio    @relation(fields: [bioId], references: [id], onDelete: Cascade)
}

model Bio {
    id        String   @id @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    displayName  String?
    bio          String?
    verified     Boolean @default(false)
    rareUsername Boolean @default(false)

    avatar     String?
    background String?

    links Link[]

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    password      String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    email         String?   @unique
    emailVerified DateTime?
    name          String?
    image         String?
    accounts      Account[]
    sessions      Session[]
    isAdmin       Boolean   @default(false)
    bio           Bio[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
